name: Burgerput-chat-server CI/CD

on:
  push:
    branches:
      - main

env:
  PROJECT_NAME: Burgerput_Chat_Server
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  CODE_DEPLOY_APP_NAME: ${{ secrets.CODE_DEPLOY_APP_NAME }}
  DEPLOYMENT_GROUP_NAME: ${{ secrets.DEPLOYMENT_GROUP_NAME }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
  NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
  ADMIN_ID: ${{ secrets.ADMIN_ID }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
  NAVER_EMAIL: ${{ secrets.NAVER_EMAIL }}
  NAVER_PASS: ${{ secrets.NAVER_PASS }}
  GMAIL_ID: ${{ secrets.GMAIL_ID }}
  BURGERPUT_SITE_1: ${{ secrets.BURGERPUT_SITE_1 }}
  BURGERPUT_SITE_2: ${{ secrets.BURGERPUT_SITE_2 }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Set Environment Variables
        run: |
          echo "NEXTAUTH_SECRET=${NEXTAUTH_SECRET}" >> .env 
          echo "NEXTAUTH_URL=${NEXTAUTH_URL}" >> .env 
          echo "NEXT_PUBLIC_URL=${NEXT_PUBLIC_URL}" >> .env 
          echo "ADMIN_ID=${ADMIN_ID}" >> .env 
          echo "ADMIN_PASSWORD=${ADMIN_PASSWORD}" >> .env
          echo "NAVER_EMAIL=${NAVER_EMAIL}" >> .env
          echo "NAVER_PASS=${NAVER_PASS}" >> .env
          echo "GMAIL_ID=${GMAIL_ID}" >> .env
          echo "BURGERPUT_SITE_1=${BURGERPUT_SITE_1}" >> .env
          echo "BURGERPUT_SITE_2=${BURGERPUT_SITE_2}" >> .env

      - name: Build with pnpm
        run: pnpm run build

      - name: Zip create
        run: zip -qq -r ./$GITHUB_SHA.zip . -x "node_modules/*"
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
            --application-name $CODE_DEPLOY_APP_NAME \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name $DEPLOYMENT_GROUP_NAME \
            --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
